# function_coding_ex.py

# ğŸ”¹ Soru 1:
# "Merhaba, dÃ¼nya!" yazdÄ±ran bir fonksiyon yaz.



def merhaba():
    print("Merhaba, dÃ¼nya!")

merhaba()  # Ã‡Ä±ktÄ±: Merhaba, dÃ¼nya!
# ----------------------------------------------------------------



# ğŸ”¹ Soru 2:
# "GÃ¼naydÄ±n, dÃ¼nya!" yazdÄ±ran bir fonksiyon yaz.



def gunaydin():
    print("GÃ¼naydÄ±n, dÃ¼nya!")

gunaydin()  # Ã‡Ä±ktÄ±: GÃ¼naydÄ±n, dÃ¼nya!
# ----------------------------------------------------------------


# ğŸ”¹ Soru 3:
# Ä°smini parametre olarak alÄ±p "Merhaba <isim>!" yazan fonksiyonu yaz.



def karsila(isim):
    print(f"Merhaba {isim}!")

karsila("Berke")  # Ã‡Ä±ktÄ±: Merhaba Berke!
# ----------------------------------------------------------------


# ğŸ”¹ Soru 4:
# Ä°smini parametre olarak alÄ±p "GÃ¼le gÃ¼le <isim>!" yazan fonksiyonu yaz.



def vedalas(isim):
    print(f"GÃ¼le gÃ¼le {isim}!")

vedalas("Ali")  # Ã‡Ä±ktÄ±: GÃ¼le gÃ¼le Ali!
# ----------------------------------------------------------------


# ğŸ”¹ Soru 5:
# Ä°ki sayÄ±yÄ± toplayÄ±p sonucu dÃ¶ndÃ¼ren fonksiyon yaz.



def topla(a, b):
    return a + b

print(topla(4, 6))  # Ã‡Ä±ktÄ±: 10
# ----------------------------------------------------------------


# ğŸ”¹ Soru 6:
# Ä°ki sayÄ± arasÄ±ndaki farkÄ± dÃ¶ndÃ¼ren fonksiyon yaz.
def fark(a, b):
    return a - b

print(fark(10, 4))  # Ã‡Ä±ktÄ±: 6
# ----------------------------------------------------------------


# ğŸ”¹ Soru 7:
# Bir liste iÃ§indeki sayÄ±larÄ±n ortalamasÄ±nÄ± hesaplayan fonksiyon yaz.



def ortalama(liste):
    return sum(liste) / len(liste)

print(ortalama([10, 20, 30]))  # Ã‡Ä±ktÄ±: 20.0
# ----------------------------------------------------------------


# ğŸ”¹ Soru 8:
# Bir liste iÃ§indeki sayÄ±larÄ±n ortalamasÄ±nÄ± hesaplayan fonksiyon yaz. Ancak sonuÃ§ integer olsun.


def ortalama(liste):
    return int(sum(liste) / len(liste))

print(ortalama([10, 20, 30]))  # Ã‡Ä±ktÄ±: 20
# ----------------------------------------------------------------


# ğŸ”¹ Soru 9:
# Bir liste iÃ§indeki sayÄ±larÄ±n toplamÄ±nÄ± dÃ¶ndÃ¼ren fonksiyon yaz.



def toplam(liste):
    return sum(liste)

print(toplam([5, 10, 15]))  # Ã‡Ä±ktÄ±: 30
# ----------------------------------------------------------------



# ğŸ”¹ Soru 10:
# Bir sayÄ±nÄ±n tek mi Ã§ift mi olduÄŸunu yazan fonksiyon yaz.
def tek_cift(sayi):
    if sayi % 2 == 0:
        print("Ã‡ift sayÄ±")
    else:
        print("Tek sayÄ±")

tek_cift(7)  # Ã‡Ä±ktÄ±: Tek sayÄ±
# ----------------------------------------------------------------



# ğŸ”¹ Soru 11:
# Bir sayÄ±nÄ±n negatif mi pozitif mi olduÄŸunu yazan fonksiyon yaz.
def negatif_mi_pozitif_mi(sayi):
    if sayi < 0:
        print("Negatif")
    else:
        print("Pozitif")

negatif_mi_pozitif_mi(-3)  # Ã‡Ä±ktÄ±: Negatif
# ----------------------------------------------------------------



# ğŸ”¹ Soru 12:
# *args kullanarak gelen sayÄ±larÄ±n Ã§arpÄ±mÄ±nÄ± hesaplayan fonksiyon yaz.
def carpim(*args):
    sonuc = 1
    for sayi in args:
        sonuc *= sayi
    return sonuc

print(carpim(2, 3, 4))  # Ã‡Ä±ktÄ±: 24


# Ã–rneÄŸin AÃ§Ä±klamalÄ± Hali:
# *args kullanarak gelen sayÄ±larÄ±n Ã§arpÄ±mÄ±nÄ± hesaplayan fonksiyon

def carpim(*args):
    # BaÅŸlangÄ±Ã§ deÄŸeri 1 Ã§Ã¼nkÃ¼ Ã§arpma iÅŸleminde etkisiz elemandÄ±r
    sonuc = 1
    
    # args iÃ§indeki her sayÄ±yÄ± sÄ±rayla al ve Ã§arp
    for sayi in args:
        sonuc *= sayi  # sonuc = sonuc * sayi

    # Ã‡arpÄ±m sonucunu dÃ¶ndÃ¼r
    return sonuc

# Fonksiyonu 2, 3, 4 ile Ã§aÄŸÄ±rÄ±yoruz
print(carpim(2, 3, 4))  # Ã‡Ä±ktÄ±: 24

# AÃ§Ä±klama:
# 1 Ã— 2 = 2
# 2 Ã— 3 = 6
# 6 Ã— 4 = 24
# SonuÃ§ â†’ 24
# ----------------------------------------------------------------


# ğŸ”¹ Soru 13:
# *args kullanarak gelen sayÄ±larÄ±n en kÃ¼Ã§Ã¼ÄŸÃ¼nÃ¼ dÃ¶ndÃ¼ren fonksiyon yaz.



def en_kucuk(*args):
    return min(args)

print(en_kucuk(7, 3, 9, 2))  # Ã‡Ä±ktÄ±: 2
# ----------------------------------------------------------------



# ğŸ”¹ Soru 14:
# **kwargs kullanarak bir kiÅŸinin bilgilerini yazdÄ±ran fonksiyon yaz.


def kisi_bilgi(**kwargs):
    for k, v in kwargs.items():
        print(f"{k}: {v}")

kisi_bilgi(ad="Zeynep", yas=28, sehir="Ankara")
# Ã‡Ä±ktÄ±:
# ad: Zeynep
# yas: 28
# sehir: Ankara

#Ã–rneÄŸin AÃ§Ä±klamasÄ±:
# **kwargs sayesinde fonksiyona istediÄŸimiz sayÄ±da anahtar-deÄŸer Ã§ifti gÃ¶nderebiliriz.
# Fonksiyon bu Ã§iftleri bir sÃ¶zlÃ¼k gibi alÄ±r:
# kwargs = {"ad": "Zeynep", "yas": 28, "sehir": "Ankara"}

# for k, v in kwargs.items() dÃ¶ngÃ¼sÃ¼ bu sÃ¶zlÃ¼ÄŸÃ¼ dolaÅŸÄ±r:
# 1. tur: k = "ad", v = "Zeynep"
# 2. tur: k = "yas", v = 28
# 3. tur: k = "sehir", v = "Ankara"
# **kwargs kullanarak bir kiÅŸinin bilgilerini yazdÄ±ran fonksiyon
# ----------------------------------------------------------------



# ğŸ”¹ Soru 15:
# **kwargs kullanarak bir Ã¼rÃ¼nÃ¼n bilgilerini yazdÄ±ran fonksiyon yaz.
def urun_bilgi(**kwargs):
    for k, v in kwargs.items():
        print(f"{k} â†’ {v}")

urun_bilgi(ad="Bilgisayar", fiyat=15000, marka="Asus")
# Ã‡Ä±ktÄ±:
# ad â†’ Bilgisayar
# fiyat â†’ 15000
# marka â†’ Asus
# ----------------------------------------------------------------



# ğŸ”¹ Soru 16:
# Fonksiyon iÃ§inde baÅŸka bir fonksiyonu Ã§aÄŸÄ±rarak karenin alanÄ±nÄ± yazdÄ±r.



def kare(x):
    return x * x

def alan_yazdir(x):
    print("Alan:", kare(x))

alan_yazdir(5)  # Ã‡Ä±ktÄ±: Alan: 25
# ----------------------------------------------------------------



# ğŸ”¹ Soru 17:
# Fonksiyon iÃ§inde baÅŸka bir fonksiyonu Ã§aÄŸÄ±rarak kÃ¼p hacmini yazdÄ±r.
def kup(x):
    return x ** 3

def hacim_yazdir(x):
    print("KÃ¼p hacmi:", kup(x))

hacim_yazdir(3)  # Ã‡Ä±ktÄ±: KÃ¼p hacmi: 27
# ----------------------------------------------------------------



# ğŸ”¹ Soru 18:
# Parametre almayan, ama "HoÅŸ geldin!" yazan bir fonksiyon yaz.



def hos_geldin():
    print("HoÅŸ geldin!")

hos_geldin()  # Ã‡Ä±ktÄ±: HoÅŸ geldin!
# ----------------------------------------------------------------



# ğŸ”¹ Soru 19:
# Parametre almayan, ama "Ä°yi akÅŸamlar!" yazan bir fonksiyon yaz.



def iyi_aksamlar():
    print("Ä°yi akÅŸamlar!")

iyi_aksamlar()  # Ã‡Ä±ktÄ±: Ä°yi akÅŸamlar!
# ----------------------------------------------------------------



# ğŸ”¹ Soru 19:
# VarsayÄ±lan parametre kullanan ve "Merhaba <isim>" yazan bir fonksiyon yaz.



def selam(isim="ZiyaretÃ§i"):
    print(f"Merhaba {isim}!")

selam()            # Ã‡Ä±ktÄ±: Merhaba ZiyaretÃ§i!
selam("AtÄ±lay")     # Ã‡Ä±ktÄ±: Merhaba AtÄ±lay!
# ----------------------------------------------------------------



# ğŸ”¹ Soru 20:
# VarsayÄ±lan parametre kullanan ve "HoÅŸÃ§a kal <isim>" yazan bir fonksiyon yaz.



def veda(isim="ArkadaÅŸ"):
    print(f"HoÅŸÃ§a kal {isim}!")

veda()          # Ã‡Ä±ktÄ±: HoÅŸÃ§a kal ArkadaÅŸ!
veda("Merve")   # Ã‡Ä±ktÄ±: HoÅŸÃ§a kal Merve!
# ----------------------------------------------------------------



# ğŸ”¹ Soru 21:
# Bir kelimeyi parametre olarak alÄ±p, bÃ¼yÃ¼k harflerle yazdÄ±ran bir fonksiyon yaz.



def buyuk_yaz(kelime):
    print(kelime.upper())

buyuk_yaz("merhaba")  # Ã‡Ä±ktÄ±: MERHABA
# ----------------------------------------------------------------



# ğŸ”¹ Soru 22:
# Bir sayÄ± listesinden sadece Ã§ift olanlarÄ± dÃ¶ndÃ¼ren fonksiyonu yaz.



def ciftleri_getir(liste):
    # BoÅŸ bir liste oluÅŸtur
    ciftler = []

    # Listedeki her elemanÄ± sÄ±rayla kontrol et
    for x in liste:
        # EÄŸer sayÄ± 2 ile tam bÃ¶lÃ¼nÃ¼yorsa (Ã§iftse)
        if x % 2 == 0:
            # Bu sayÄ±yÄ± ciftler listesine ekle
            ciftler.append(x)

    # SonuÃ§ olarak ciftler listesini dÃ¶ndÃ¼r
    return ciftler

print(ciftleri_getir([1, 2, 3, 4, 5, 6]))  # Ã‡Ä±ktÄ±: [2, 4, 6]
# ----------------------------------------------------------------



# ğŸ”¹ Soru 23:
#Bir string'in kaÃ§ karakterden oluÅŸtuÄŸunu dÃ¶ndÃ¼ren fonksiyon yaz.



def uzunluk(kelime):
    return len(kelime)

print(uzunluk("Python"))  # Ã‡Ä±ktÄ±: 6
# ----------------------------------------------------------------


# ğŸ”¹ Soru 24:


# Bir sayÄ± listesindeki en bÃ¼yÃ¼k sayÄ±yÄ± dÃ¶ndÃ¼ren fonksiyon yaz.



def en_buyuk(liste):
    return max(liste)

print(en_buyuk([4, 10, 8]))  # Ã‡Ä±ktÄ±: 10
# ----------------------------------------------------------------


# ğŸ”¹ Soru 25:
# *args kullanarak gÃ¶nderilen sayÄ±lar arasÄ±ndan en bÃ¼yÃ¼ÄŸÃ¼nÃ¼ bulan fonksiyon yaz.

def hmm(*sayilar):
    return max(sayilar)

print(hmm(10, 20))  # Ã‡Ä±ktÄ±: 20






